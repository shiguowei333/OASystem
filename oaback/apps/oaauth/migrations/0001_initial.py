# Generated by Django 5.1.5 on 2025-01-25 13:52

import apps.oaauth.models
import shortuuidfield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OAUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, primary_key=True, serialize=False)),
                ('real_name', models.CharField(max_length=150, verbose_name='真实姓名')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱')),
                ('telephone', models.CharField(blank=True, max_length=20, verbose_name='手机号')),
                ('is_staff', models.BooleanField(default=True, verbose_name='员工用户')),
                ('status', models.IntegerField(choices=[(1, 'Actived'), (2, 'Unactive'), (3, 'Lock')], default=2, verbose_name='用户状态')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='加入时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', apps.oaauth.models.OAUserManager()),
            ],
        ),
    ]
